{"version":3,"sources":["components/NoteCard.js","data/notes.js","pages/Notes.js","pages/Create.js","components/Layout.js","App.js","index.js"],"names":["useStyles","makeStyles","avatar","backgroundColor","note","category","yellow","green","pink","blue","NoteCard","handleDelete","classes","Card","elevation","CardHeader","Avatar","className","toUpperCase","action","IconButton","onClick","id","DeleteOutlined","title","subheader","CardContent","Typography","variant","color","details","notesData","Notes","useState","notes","setNotes","useEffect","a","newNotes","filter","Container","breakpointCols","default","columnClassName","map","item","theme","field","marginTop","marginBottom","display","palette","type","Create","history","useHistory","setTitle","setDetails","titleError","setTitleError","detailsError","setDetailsError","setCategory","component","gutterBottom","noValidate","autoComplete","onSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","then","push","console","log","TextField","onChange","target","value","label","fullWidth","required","error","multiline","minRows","FormControl","FormLabel","RadioGroup","FormControlLabel","control","Radio","Button","endIcon","drawerWidth","page","background","width","height","padding","spacing","root","active","toolbarDiv","mixins","toolbar","date","flexGrow","marginLeft","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","breakpoints","up","alignItems","justifyContent","content","Layout","children","toggleDark","settoggleDark","location","useLocation","useTheme","open","setOpen","menuItems","text","icon","EventNoteOutlined","path","AddCircleOutlined","AppBar","position","clsx","Toolbar","edge","format","Date","Switch","checked","name","user","Drawer","paper","direction","Divider","List","ListItem","button","pathname","ListItemIcon","ListItemText","primary","App","myTheme","createTheme","secondary","typography","fontFamily","fontWeightLight","fontWeightRegular","fontWeightMedium","fontWeightBold","ThemeProvider","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e92c58b2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Avatar, IconButton, makeStyles } from \"@material-ui/core\";\r\nimport { DeleteOutlined } from \"@material-ui/icons\";\r\nimport { blue, green, pink, yellow } from \"@material-ui/core/colors\";\r\n\r\nconst useStyles = makeStyles({\r\n  avatar: {\r\n    backgroundColor: (note) => {\r\n      if (note.category === \"work\") {\r\n        return yellow[700];\r\n      }\r\n      if (note.category === \"money\") {\r\n        return green[500];\r\n      }\r\n      if (note.category === \"todos\") {\r\n        return pink[500];\r\n      }\r\n      return blue[500];\r\n    },\r\n  },\r\n});\r\n\r\nexport default function NoteCard({ note, handleDelete }) {\r\n  const classes = useStyles(note);\r\n  return (\r\n    <div>\r\n      <Card elevation={3}>\r\n        <CardHeader\r\n          avatar={\r\n            <Avatar className={classes.avatar}>\r\n              {note.category[0].toUpperCase()}\r\n            </Avatar>\r\n          }\r\n          action={\r\n            <IconButton onClick={() => handleDelete(note.id)}>\r\n              <DeleteOutlined />\r\n            </IconButton>\r\n          }\r\n          title={note.title}\r\n          subheader={note.category}\r\n        />\r\n        <CardContent>\r\n          <Typography variant=\"body2\" color=\"textSecondary\">\r\n            {note.details}\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","const notesData = [\r\n  {\r\n    title: \"Yoshi's birthday bash\",\r\n    details:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\",\r\n    category: \"reminders\",\r\n    id: 1,\r\n  },\r\n  {\r\n    title: \"Complete my ninja training\",\r\n    details:\r\n      \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took.\",\r\n    category: \"work\",\r\n    id: 2,\r\n  },\r\n];\r\n\r\nexport default notesData;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport NoteCard from \"../components/NoteCard\";\r\nimport Masonry from \"react-masonry-css\";\r\nimport notesData from \"../data/notes\";\r\n\r\nexport default function Notes() {\r\n  const [notes, setNotes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setNotes(notesData);\r\n  }, []);\r\n\r\n  const handleDelete = async (id) => {\r\n    const newNotes = notes.filter((note) => note.id !== id);\r\n    setNotes(newNotes);\r\n  };\r\n\r\n  const breakpoints = {\r\n    default: 3,\r\n    1100: 2,\r\n    700: 1,\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Masonry\r\n        breakpointCols={breakpoints}\r\n        className=\"my-masonry-grid\"\r\n        columnClassName=\"my-masonry-grid_column\"\r\n      >\r\n        {notes.map((note) => (\r\n          <div item key={note.id}>\r\n            <NoteCard note={note} handleDelete={handleDelete} />\r\n          </div>\r\n        ))}\r\n      </Masonry>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport KeyboardArrowRightIcon from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  field: {\r\n    marginTop: 20,\r\n    marginBottom: 20,\r\n    display: \"block\",\r\n    color: theme.palette.type === \"dark\" ? \"white\" : \"black\",\r\n  },\r\n}));\r\n\r\nexport default function Create() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [title, setTitle] = useState(\"\");\r\n  const [details, setDetails] = useState(\"\");\r\n  const [titleError, setTitleError] = useState(false);\r\n  const [detailsError, setDetailsError] = useState(false);\r\n  const [category, setCategory] = useState(\"todos\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setTitleError(false);\r\n    setDetailsError(false);\r\n\r\n    if (title === \"\") {\r\n      setTitleError(true);\r\n    }\r\n    if (details === \"\") {\r\n      setDetailsError(true);\r\n    }\r\n\r\n    if (title && details) {\r\n      fetch(\"http://localhost:8000/notes\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-type\": \"application/json\" },\r\n        body: JSON.stringify({ title, details, category }),\r\n      }).then(() => history.push(\"/\"));\r\n      console.log(title, details, category);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Typography\r\n        variant=\"h6\"\r\n        color=\"textSecondary\"\r\n        component=\"h2\"\r\n        gutterBottom\r\n      >\r\n        Create a New Note\r\n      </Typography>\r\n\r\n      <form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\r\n        <TextField\r\n          onChange={(e) => setTitle(e.target.value)}\r\n          className={classes.field}\r\n          label=\"Note Title\"\r\n          variant=\"outlined\"\r\n          color=\"secondary\"\r\n          fullWidth\r\n          required\r\n          error={titleError}\r\n        />\r\n        <TextField\r\n          onChange={(e) => setDetails(e.target.value)}\r\n          className={classes.field}\r\n          label=\"Details\"\r\n          variant=\"outlined\"\r\n          color=\"secondary\"\r\n          multiline\r\n          minRows={4}\r\n          fullWidth\r\n          required\r\n          error={detailsError}\r\n        />\r\n\r\n        <FormControl className={classes.field}>\r\n          <FormLabel>Note Category</FormLabel>\r\n          <RadioGroup\r\n            value={category}\r\n            onChange={(e) => setCategory(e.target.value)}\r\n          >\r\n            <FormControlLabel value=\"money\" control={<Radio />} label=\"Money\" />\r\n            <FormControlLabel value=\"todos\" control={<Radio />} label=\"Todos\" />\r\n            <FormControlLabel\r\n              value=\"reminders\"\r\n              control={<Radio />}\r\n              label=\"Reminders\"\r\n            />\r\n            <FormControlLabel value=\"work\" control={<Radio />} label=\"Work\" />\r\n          </RadioGroup>\r\n        </FormControl>\r\n\r\n        <Button\r\n          type=\"submit\"\r\n          color=\"default\"\r\n          variant=\"contained\"\r\n          endIcon={<KeyboardArrowRightIcon />}\r\n        >\r\n          Submit\r\n        </Button>\r\n      </form>\r\n    </Container>\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/styles\";\r\nimport React, { useState } from \"react\";\r\nimport { Divider, Drawer, IconButton, useTheme } from \"@material-ui/core\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport { AddCircleOutlined, EventNoteOutlined } from \"@material-ui/icons\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport { useHistory, useLocation } from \"react-router\";\r\nimport { AppBar } from \"@material-ui/core\";\r\nimport { Toolbar } from \"@material-ui/core\";\r\nimport { format } from \"date-fns\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport { green } from \"@material-ui/core/colors\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    page: {\r\n      background: theme.palette.background.default,\r\n      width: \"100%\",\r\n      height: \"95vh\",\r\n      padding: theme.spacing(5),\r\n    },\r\n    root: {\r\n      display: \"flex\",\r\n    },\r\n    active: {\r\n      background: theme.palette.background.default,\r\n    },\r\n    title: {\r\n      padding: theme.spacing(2),\r\n    },\r\n    toolbarDiv: theme.mixins.toolbar,\r\n    date: {\r\n      flexGrow: 1,\r\n    },\r\n    avatar: {\r\n      marginLeft: theme.spacing(1),\r\n      backgroundColor: green[500],\r\n    },\r\n    appBar: {\r\n      background: theme.palette.background.default,\r\n      color: theme.palette.type === \"dark\" ? \"white\" : \"black\",\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      transition: theme.transitions.create([\"width\", \"margin\"], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    },\r\n    appBarShift: {\r\n      marginLeft: drawerWidth,\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      transition: theme.transitions.create([\"width\", \"margin\"], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    menuButton: {\r\n      marginRight: 36,\r\n    },\r\n    hide: {\r\n      display: \"none\",\r\n    },\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n      whiteSpace: \"nowrap\",\r\n    },\r\n    drawerOpen: {\r\n      width: drawerWidth,\r\n      transition: theme.transitions.create(\"width\", {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    drawerClose: {\r\n      transition: theme.transitions.create(\"width\", {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      overflowX: \"hidden\",\r\n      width: theme.spacing(7) + 1,\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        width: theme.spacing(8) + 1,\r\n      },\r\n    },\r\n    toolbar: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"flex-end\",\r\n      padding: theme.spacing(0, 1),\r\n      // necessary for content to be below app bar\r\n      ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n    },\r\n  };\r\n});\r\n\r\nexport default function Layout({ children, toggleDark, settoggleDark }) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = useState(false);\r\n\r\n  // Trigger toggle using onChange Switch\r\n  const handleModeChange = () => {\r\n    settoggleDark(!toggleDark);\r\n  };\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const menuItems = [\r\n    {\r\n      text: \"My Notes\",\r\n      icon: <EventNoteOutlined color=\"primary\" />,\r\n      path: \"/\",\r\n    },\r\n    {\r\n      text: \"Create Note\",\r\n      icon: <AddCircleOutlined color=\"primary\" />,\r\n      path: \"/create\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: open,\r\n            })}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography className={classes.date}>\r\n            {format(new Date(), \"MMM do\")}\r\n          </Typography>\r\n          <Switch\r\n            checked={toggleDark}\r\n            onChange={handleModeChange}\r\n            name=\"toggleDark\"\r\n            color=\"default\"\r\n          />\r\n          <Typography className={classes.user}>Renato Garay</Typography>\r\n          <Avatar className={classes.avatar}>RG</Avatar>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === \"rtl\" ? (\r\n              <ChevronRightIcon />\r\n            ) : (\r\n              <ChevronLeftIcon />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n\r\n        <List>\r\n          {menuItems.map((item) => (\r\n            <ListItem\r\n              button\r\n              key={item.text}\r\n              onClick={() => history.push(item.path)}\r\n              className={\r\n                location.pathname === item.path ? classes.active : null\r\n              }\r\n            >\r\n              <ListItemIcon>{item.icon}</ListItemIcon>\r\n              <ListItemText primary={item.text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n\r\n      <div className={classes.page}>\r\n        <div className={classes.toolbarDiv}></div>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Notes from \"./pages/Notes\";\nimport Create from \"./pages/Create\";\nimport { ThemeProvider } from \"@material-ui/core\";\nimport { createTheme } from \"@material-ui/core/styles\";\nimport { green } from \"@material-ui/core/colors\";\nimport Layout from \"./components/Layout\";\nimport { useState } from \"react\";\n\nfunction App() {\n  const [toggleDark, settoggleDark] = useState(false);\n  const myTheme = createTheme({\n    // Theme settings\n    palette: {\n      type: toggleDark ? \"dark\" : \"light\",\n      primary: green,\n      secondary: green,\n    },\n    typography: {\n      fontFamily: \"Quicksand\",\n      fontWeightLight: 400,\n      fontWeightRegular: 500,\n      fontWeightMedium: 600,\n      fontWeightBold: 700,\n    },\n  });\n\n  return (\n    <ThemeProvider theme={myTheme}>\n      <Router>\n        <Layout toggleDark={toggleDark} settoggleDark={settoggleDark}>\n          <Switch>\n            <Route exact path=\"/\">\n              <Notes />\n            </Route>\n            <Route path=\"/create\">\n              <Create />\n            </Route>\n          </Switch>\n        </Layout>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}